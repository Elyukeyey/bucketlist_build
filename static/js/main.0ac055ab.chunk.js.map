{"version":3,"sources":["components/Header.js","components/Secrets.js","components/ErrorMessage.js","components/BucketCreate.js","components/Bucketlist.js","components/BucketFiles.js","components/BucketDetails.js","components/Bucket.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","goHome","Secrets","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","name","currentTarget","setState","defineProperty","value","handleClick","remember","state","handleSubmit","preventDefault","console","log","token","alert","fetch","method","headers","Content-Type","Authorization","then","res","ok","localStorage","setItem","handleLogin","status","json","data","response","message","access","onSubmit","type","placeholder","onChange","Component","ErrorMessage","clearErrorMsg","errMsg","component","toggleError","defaultProps","BucketCreate","handleNameChange","newState","target","location","newBucket","handleSelectChange","addBucket","_this$state$newBucket","auth","body","JSON","stringify","fetchBucketList","setErrorMsg","statusText","concat","toggleCreate","form","locations","map","opt","key","id","btn","Fragment","toggle","Bucketlist","selectBucket","fetchBucket","fetchObjects","toggleBucket","select","_this2","row","buckets","bucket","components_BucketCreate","length","React","BucketFiles","browseFiles","upload","current","click","uploadFile","formData","FormData","append","files","selectObject","toggleDel","toggleDelete","deleteObject","createRef","objects","object","last_modified","size","Math","round","deleteButton","deleteConfirm","ref","required","modified","BucketDetails","deleteBucket","getSize","sum","forEach","val","_this$props$bucket","Bucket","switchTab","toggleTab","bind","components_BucketFiles","components_BucketDetails","App","login","bucketlist","errToggle","toggleLogin","fetchLocations","text","comp","err","prevProps","prevState","snapshot","ls","getItem","components_Header","components_Secrets","components_Bucketlist","components_Bucket","components_ErrorMessage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0ac055ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"app-header\">\r\n        <div className=\"width-90\">\r\n        <button className=\"btn text-white header-title\" onClick={props.goHome}><h1>Bucket List</h1></button> \r\n        <h3>Secure Cloud Storage</h3>\r\n        </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nclass Secrets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: '',\r\n            remember: false,\r\n            response: '',\r\n            access: false\r\n        };\r\n    }\r\n\r\n    \r\n    // Set input Bucket name value\r\n    handleChange = (e) => { // e.target == undefined, had to use currentTarget\r\n        const name = e.currentTarget.name;\r\n        this.setState({ [name]: e.currentTarget.value});\r\n    }\r\n\r\n    // Toggle remember me / stay signed in\r\n    handleClick = () => {\r\n        this.setState({ remember: !this.state.remember });\r\n    }\r\n\r\n\r\n    // On submit: test key, if ok continue to BucketList, else notify use about fail\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('submitted ...');\r\n\r\n        if(this.state.token === '') { alert('Please enter your key'); } else { // check if token is entered\r\n            fetch('https://challenge.3fs.si/storage/locations',\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Token ' + this.state.token\r\n            }}).then(res=> {\r\n                if(res.ok) {\r\n                    if (this.state.remember) { localStorage.setItem('userKey','Token ' + this.state.token); } // if remember me checked write to local storage\r\n                    this.props.handleLogin(this.state.token);\r\n                } else if(res.status === 401) {\r\n                    res.json().then(data=>this.setState({response: data.message + ' Please enter a valid key!'}));\r\n                } else if (res.status === 500) {\r\n                    res.json().then(data=>this.setState({response: 'Server error: ' + data.message + ' Please try again!'}));\r\n                }\r\n            })\r\n        }\r\n    }\r\n  render() {\r\n    return (\r\n    <div className=\"width-90 bg-white margin-top\">\r\n        <div className=\"text-center text-lg text-danger font-weight-bold\">{this.state.response}</div>\r\n        <form className=\"text-center\" onSubmit={this.handleSubmit}>\r\n            <label>Your key:</label>\r\n            <p className=\"small\">e.g.: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX</p>\r\n            <input type=\"text\" placeholder={this.state.token} name=\"token\" onChange={this.handleChange} className=\"login-input\"/>\r\n            <label>Remember me?</label>\r\n            <input type=\"checkbox\" className=\"login-checkbox\" name=\"remember\" onChange={this.handleClick}/>\r\n            <button type=\"submit\" className=\"btn btn-success btn-lg\"><i className=\"fas fa-sign-in-alt\"></i> Sign in</button>\r\n        </form>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Secrets","import React, { Component } from 'react'\r\n\r\nclass ErrorMessage extends Component {\r\n  componentWillUnmount() {\r\n    this.props.clearErrorMsg();\r\n  }\r\n  render () {\r\n    return(\r\n    <div className=\"modal-view\">\r\n        <div className=\"modal-box text-center\">\r\n            <h2 className=\"text-danger\">Whoops!</h2>\r\n            <h2>:(</h2>\r\n            <p>Something went wrong. Sorry!</p>\r\n            <p>The Server reported:</p>\r\n            <p className=\"font-weight-bold\">ERROR ({this.props.errMsg.status}):</p>\r\n            <p className=\"font-weight-bold\">{this.props.errMsg.message}</p>\r\n            <p>Log location: {this.props.errMsg.component}</p>\r\n            <p className=\"text-sm\">Please refresh the page</p>\r\n            <button className=\"btn btn-info btn-sm\" onClick={this.props.toggleError}>Close</button>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nErrorMessage.defaultProps = {\r\n  status: 0,\r\n  message: 'default message',\r\n  component: 'default loc'\r\n}\r\n\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from 'react';\r\n\r\nclass BucketCreate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newBucket: {\r\n                name: '',\r\n                location: ''\r\n                }\r\n            }\r\n        }\r\n\r\n    // Form functions\r\n\r\n    // Set the value from the name <input>\r\n    handleNameChange = (e) => {\r\n        const newState = {\r\n            name: e.target.value,\r\n            location: this.state.newBucket.location\r\n        }\r\n        this.setState({ newBucket: newState });\r\n    }\r\n\r\n\r\n    // Set the location based on the <select> value\r\n    handleSelectChange = (e) => { \r\n        let newState = {\r\n            name: this.state.newBucket.name,\r\n            location: e.target.value\r\n        }\r\n        this.setState({ newBucket: newState })\r\n    }\r\n\r\n\r\n\r\n    // POST request to the API\r\n    addBucket = (e) => { \r\n        e.preventDefault(); // Prevent default form submit\r\n        let { location, name } = this.state.newBucket;\r\n        \r\n        if(!name || !location) { alert('Name and location are both required fields!'); } else { // If the name is not displayed warn the user\r\n\r\n            fetch(\"https://challenge.3fs.si/storage/buckets\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.auth\r\n                    },\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    location: location\r\n                })})\r\n            .then(res =>{\r\n                    if (res.ok) { this.props.fetchBucketList(); } else {\r\n                        this.props.setErrorMsg(res.status,res.statusText,'BucketCreate.js:56');\r\n                        console.log(`Error (${res.status}) creating a bucket, server says: ${res.statusText}`);\r\n                        this.props.toggleError();\r\n                    }\r\n                });\r\n            this.props.toggleCreate();\r\n        }    \r\n    }\r\n  render() {\r\n    const form = <form onSubmit={this.addBucket}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                        <label>Bucket Name*</label><br />\r\n                        <input type=\"text\" name=\"name\" value={this.state.newBucket.name} onChange={this.handleNameChange}/>      \r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                        <label>Location*</label><br />\r\n                            <select name=\"locations\" onChange={this.handleSelectChange}>\r\n                                <option></option>\r\n                                {this.props.locations.map(opt => <option key={opt.id} value={opt.id}>{opt.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-left\">\r\n                            <button className=\"btn btn-success\">Add Bucket</button>\r\n                        </div>\r\n                    </div>\r\n                </form>;\r\n    const btn = <button onClick={this.props.toggleCreate} className=\"btn btn-info\">CreateBucket</button> // Toggle the Add bucket form button\r\n    return (\r\n    <>\r\n        <div className=\"width-90 bg-white\">\r\n        {(this.props.toggle) ? form : btn}\r\n        </div>\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BucketCreate\r\n","import React, { Component } from 'react';\r\nimport BucketCreate from './BucketCreate';\r\n\r\nclass Bucketlist extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          toggle: false,  // toggles on/off the add bucket <form>\r\n          select: ''\r\n      }\r\n  }\r\n\r\n\r\n   // Toggle add bucket <form>\r\n  toggleCreate = () => {\r\n    this.setState({ toggle: !this.state.toggle });\r\n  }\r\n\r\n  // Select and open the bucket from the list \r\n  selectBucket = (e) => {\r\n    this.props.fetchBucket(e.currentTarget.id);\r\n    this.props.fetchObjects(e.currentTarget.id);\r\n    this.props.toggleBucket();\r\n  }\r\n\r\n  render() {\r\n    const row = this.props.buckets.map(bucket => \r\n                <div key={bucket.id} id={bucket.id} onClick={this.selectBucket} className={`row li ${(this.state.select===bucket.id)? 'li-active' :''}`}>\r\n                <div className=\"col-9\">\r\n                {bucket.name}\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  {bucket.location.name}\r\n                </div>\r\n              </div>);\r\n    return (\r\n\r\n      <>\r\n        <BucketCreate\r\n            /*States*/\r\n            toggle={this.state.toggle}\r\n            auth={this.props.auth}\r\n            locations={this.props.locations}\r\n            /*Functions */\r\n            toggleCreate={this.toggleCreate}\r\n            fetchBucketList={this.props.fetchBucketList}\r\n            /*Error functions */\r\n            toggleError={this.props.toggleError}\r\n            setErrorMsg={this.props.setErrorMsg}\r\n            />\r\n        <div className=\"width-90 bg-white\">\r\n          <div className=\"col-3 text-left\">All Buckets ({this.props.buckets.length})</div>\r\n          <div className=\"row row-header\">\r\n            <div className=\"col-9\">Name</div><div className=\"col-3\">Location</div>\r\n          </div>\r\n          { row }\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nReact.defaultProps = {\r\n  buckets: [\r\n    {\r\n      id: \"-\",\r\n      name: \"\",\r\n      location: {\r\n        id: \"-\",\r\n        name: \"\"\r\n      }\r\n    }\r\n  ]\r\n}\r\nexport default Bucketlist;","import React, { Component } from 'react'\r\n\r\nclass BucketFiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            select: '',\r\n            toggleDelete: false,\r\n        }\r\n        // Ref for the hidden <input> - input activates when the button is pressed.\r\n        this.upload = React.createRef(); \r\n    }\r\n\r\n\r\n\r\n    // UPLOAD functions\r\n\r\n    // trigger the <input> for file upload\r\n    browseFiles = () => {\r\n        this.upload.current.click();\r\n    }\r\n\r\n    // Send the file to the API\r\n    uploadFile = (e) => {\r\n        if(e.target.value !== '') { // Check if a file was selected \r\n        let {id} = this.props.bucket;\r\n        const formData = new FormData();\r\n        formData.append(e.target.name,this.upload.current.files[0]);\r\n        fetch(`https://challenge.3fs.si/storage/buckets/${id}/objects`, \r\n            {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: this.props.auth\r\n                },\r\n            body: formData\r\n        })\r\n        .then(res => {\r\n            if (res.ok) { this.props.fetchObjects(id); } else {\r\n                this.props.setErrorMsg(res.status,res.statusText,'BucketFiles.js:39');\r\n                console.log(`Error (${res.status}) uploading file, server says: ${res.statusText}`); \r\n                this.props.toggleError();\r\n            }\r\n        });\r\n        }\r\n    }\r\n\r\n    // DELETE functions\r\n\r\n    // Select file to delete\r\n    selectObject = (e) => { \r\n        e.preventDefault();\r\n        this.setState({ select: e.currentTarget.id });\r\n    }\r\n\r\n    // toggles the \"confirm/cancel\" modal window\r\n    // alerts the user if no file is selected\r\n    toggleDel = () => {\r\n        (this.state.select) ? this.setState({toggleDelete: !this.state.toggleDelete}) : alert('Select a file to delete!');\r\n    } \r\n\r\n\r\n    // Delete single files from Bucket\r\n    deleteObject = () => { // sends the delete request to API\r\n            fetch(`https://challenge.3fs.si/storage/buckets/${this.props.bucket.id}/objects/${this.state.select}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': this.props.auth\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res.ok) { this.props.fetchObjects(this.props.bucket.id) } else { \r\n                    this.props.setErrorMsg(res.status,res.statusText,'BucketFiles.js:73');\r\n                    console.log(`Error (${res.status}) deleting file, server says: ${res.statusText}`);\r\n                    this.props.toggleError();\r\n                }\r\n            });\r\n            //.catch(res=>res.json().then(data=>console.table(data)));\r\n            this.setState({select: '', toggleDelete: false}); // reset the selection and delete button\r\n  }\r\n\r\n  render() {\r\n    // Render files\r\n    const row = this.props.objects.map(object =>\r\n        <div key={object.name} id={object.name} onClick={this.selectObject} className={`row li ${(this.state.select===object.name)? 'li-active' :''}`}>\r\n        <div className=\"col-5\">\r\n        <i className=\"far fa-file-alt\"></i> {object.name}\r\n        </div>\r\n        <div className=\"col-4\">\r\n        {object.last_modified}\r\n        </div>\r\n        <div className=\"col-3\">\r\n          {((object.size/1024/1024) < 1) ? Math.round(object.size/1024) + 'kB' : Math.round(object.size/1024/1024) + 'MB'}\r\n        </div>\r\n      </div>\r\n        );\r\n    // Delete buttons\r\n    const deleteButton = <button className=\"btn btn-sm btn-secondary\" onClick={this.toggleDel}>Delete Object</button>;\r\n    const deleteConfirm = \r\n    <div className=\"modal-view\">\r\n        <div className=\"modal-box text-center\">\r\n            <h4 className=\"margin-bottom\">Do you really want to delete this file?</h4>\r\n                <div>\r\n                    <button className=\"btn btn-sm btn-danger\" onClick={this.deleteObject}>Confirm</button>\r\n                    <button className=\"btn btn-sm btn-info\" onClick={this.toggleDel}>Cancel</button>\r\n                </div>\r\n        </div>\r\n    </div>;\r\n    return (\r\n        <>\r\n        <div className=\"width-90 bg-white\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3 text-left\">All files ({this.props.objects.length})</div>\r\n                <div className=\"col-9 text-right\">\r\n                {deleteButton}\r\n                {(this.state.toggleDelete) ? deleteConfirm : null}\r\n                    <button className=\"btn btn-sm btn-success\" onClick={this.browseFiles}>Upload Object</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-header\">\r\n                <div className=\"col-5\">Name</div><div className=\"col-4\">Last modified</div><div className=\"col-3\">Size</div>\r\n            </div>\r\n            { (this.props.objects) ? row : `Something's wrong...` }\r\n        </div>\r\n        <input type=\"file\" name=\"file\" className=\"hidden-input\" ref={this.upload} onChange={this.uploadFile} required/>\r\n            </>\r\n    )\r\n  }\r\n}\r\n\r\nReact.defaultProps = {\r\n    objects: [\r\n        {\r\n          name: \"\",\r\n          modified: \"\",\r\n          size: 0\r\n        }\r\n      ]\r\n}\r\n\r\nexport default BucketFiles;","import React, { Component } from 'react'\r\n\r\nclass BucketDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggleDelete: false,\r\n            select: ''\r\n        }\r\n    }\r\n\r\n\r\n    // Delete Bucket functions\r\n\r\n\r\n    // toggle delete bucket / confirm buttons\r\n    toggleDel = () => {\r\n       this.setState({toggleDelete: !this.state.toggleDelete});\r\n    }\r\n\r\n\r\n   // send delete request to API\r\n  deleteBucket = () => {\r\n            fetch(`https://challenge.3fs.si/storage/buckets/${this.props.bucket.id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': this.props.auth\r\n                }\r\n            })\r\n            .then((res) => {\r\n              if(res.ok) { this.props.fetchBucketList(); } else {\r\n                this.props.setErrorMsg(res.status,res.statusText,'BucketDetails.js:33');\r\n                console.log(`Error (${res.status}) deleting file, server says: ${res.statusText}`);\r\n                this.props.toggleError();\r\n              }\r\n            })\r\n            .then(this.props.goHome());\r\n            this.setState({toggleDelete: false}); // reset the delete modal window\r\n            \r\n  }\r\n\r\n  // Calculate the total file size of the Bucket\r\n  getSize = () => {\r\n    let sum = 0;\r\n    if (this.props.objects) {\r\n      this.props.objects.forEach((val) => sum += val.size);\r\n    }\r\n    if ((sum/1024/1024) < 1) { // return kB or MB values respectively\r\n        return Math.round(sum/1024) + 'kB';\r\n     } else {\r\n        return Math.round(sum/1024/1024) + 'MB';\r\n     } \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { name, location } = this.props.bucket;\r\n    // get total size of bucket\r\n    let sum = this.getSize();\r\n    // delete buttons\r\n    const deleteButton = <button className=\"btn btn-sm btn-secondary\" onClick={this.toggleDel}>Delete Bucket</button>;\r\n    const deleteConfirm = \r\n                        <div className=\"modal-view\">\r\n                          <div className=\"modal-box text-center\">\r\n                            <h4 className=\"margin-bottom\">Do you really want to delete this bucket?</h4>\r\n                            <div>\r\n                            <button className=\"btn btn-danger\" onClick={this.deleteBucket}>Yes!</button>\r\n                            <button className=\"btn btn-info\" onClick={this.toggleDel}>No!</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>;\r\n    return (\r\n      <div className=\"width-90 bg-white\">\r\n        <div className=\"text-right\">\r\n            {deleteButton}\r\n            {(this.state.toggleDelete) ? deleteConfirm : null}\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-3\">\r\n                <p>Bucket name:</p>\r\n                <p>Location:</p>\r\n                <p>Storage size:</p>\r\n            </div>\r\n            <div className=\"col-9\">\r\n                <p>{name}</p>\r\n                <p>{location.name}</p>\r\n                <p>{ sum }</p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BucketDetails;","import React, { Component } from 'react';\r\nimport BucketFiles from './BucketFiles';\r\nimport BucketDetails from './BucketDetails';\r\n\r\nclass Bucket extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            select:'',\r\n            toggleTab: 'files',\r\n        }\r\n    }\r\n\r\n    // switches between Files and Details tabs\r\n    switchTab = (value) => {\r\n        this.setState({toggleTab: value});\r\n    }\r\n    render() {        \r\n        const { toggleTab } = this.state;\r\n        return (\r\n            <>\r\n            <div className=\"width-90 bg-white\">\r\n                <div>\r\n                    <button className={`btn btn-lg ${(toggleTab === 'files') ? 'btn-info' : 'btn-secondary' }`} onClick={this.switchTab.bind(this,'files')}>Files</button>\r\n                    <button className={`btn btn-lg ${(toggleTab === 'details') ? 'btn-info' : 'btn-secondary'}`} onClick={this.switchTab.bind(this,'details')}>Details</button>\r\n                </div>\r\n            </div>\r\n            { this.state.toggleTab === 'files' && <BucketFiles \r\n                                                        /*States */\r\n                                                        bucket={this.props.bucket}\r\n                                                        objects={this.props.objects}\r\n                                                        auth={this.props.auth}\r\n                                                        /*Functions */\r\n                                                        fetchObjects={this.props.fetchObjects}\r\n                                                        goHome={this.props.goHome}\r\n                                                        /* Error Functions */\r\n                                                        toggleError={this.props.toggleError}\r\n                                                        setErrorMsg={this.props.setErrorMsg}\r\n                                                        />}\r\n            { this.state.toggleTab === 'details' && <BucketDetails\r\n                                                        /* States */\r\n                                                        bucket={this.props.bucket}\r\n                                                        objects={this.props.objects}\r\n                                                        auth={this.props.auth}\r\n                                                        /* Functions */\r\n                                                        goHome={this.props.goHome}\r\n                                                        fetchBucketList={this.props.fetchBucketList}\r\n                                                        /* Error Functions */\r\n                                                        toggleError={this.props.toggleError}\r\n                                                        setErrorMsg={this.props.setErrorMsg}\r\n                                                        />}\r\n            </>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nReact.defaultProps = {\r\n    bucket: {\r\n        name: '',\r\n        id: '',\r\n        location: {\r\n            name: '',\r\n            id:''\r\n        }\r\n    },\r\n    objects: [\r\n        {\r\n          name: \"\",\r\n          modified: \"\",\r\n          size: 0\r\n        }\r\n      ]\r\n}\r\n\r\nexport default Bucket","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Secrets from './components/Secrets';\nimport ErrorMessage from './components/ErrorMessage';\nimport Bucketlist from './components/Bucketlist';\nimport Bucket from './components/Bucket';\n\nimport './App.css';\n\nclass App extends Component {\n\n    state = {\n    login: false,\n    auth: 'Token',\n    bucket: {\n      name: '',\n      id: '',\n      location: {\n          name: '',\n          id:''\n      }\n    },\n    buckets: [\n            {\n              id: \"-\",\n              name: \"\",\n              location: {\n                id: \"-\",\n                name: \"\"\n              }\n            }\n          ],\n    locations: [],\n    objects: [\n      {\n        name: \"\",\n        modified: \"\",\n        size: 0\n      }\n    ],\n    bucketlist: true,\n    errMsg: {\n      status: 0,\n      message: '',\n      component: ''\n    },\n    errToggle: false\n  }\n\n  // Login functions\n\n  handleLogin = (val) => {\n    this.setState({\n      auth: 'Token ' + val,\n    });\n  }\n\n  toggleLogin = () => {\n    this.setState({login: true});\n  }\n\n  /*  returns to the main screen\n      used in Header component if the user clicks the H1 title\n      used in BucketDetails component when the users deletes a bucket\n  */\n  goHome = () => {\n    let emptyBucket = {\n      name: '',\n      id: '',\n      location: {\n          name: '',\n          id:''\n      }\n    }\n    this.setState({ bucketlist: true, bucket: emptyBucket });\n  }\n\n\n\n// toggles views between Bucket and Bucketlist components\n\n\n  toggleBucket = () => {\n    this.setState({bucketlist: false});\n  }\n\n\n  // FETCH GET REQUESTS:\n\n  // single bucket\n  fetchBucket = (id) => {\n    fetch(`https://challenge.3fs.si/storage/buckets/${id}`, \n          {\n            method: \"GET\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': this.state.auth\n          }\n          })\n    .then(res => {\n      if (res.ok) { res.json().then(data=>this.setState({ bucket: data.bucket })) } else {\n        this.setErrorMsg(res.status,res.statusText,'App.js:102');\n        console.log(`Error (${res.status}) on fetch Bucket, server response: ${res.statusText}`);\n        this.toggleError();\n      }\n    });\n  }\n\n  // bucket list\n  fetchBucketList = () => {\n    fetch(\"https://challenge.3fs.si/storage/buckets\",\n          {\n            method: \"GET\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': this.state.auth\n            }\n    })\n    .then(res => {\n      if (res.ok) {res.json().then(data=>this.setState({ buckets: data.buckets })) } else {\n        this.setErrorMsg(res.status,res.statusText,'App.js:121');\n        console.log(`Error (${res.status}) on fetch BucketList, server response: ${res.statusText}`);\n        this.toggleError();\n      }\n    });\n\n  }\n\n  // fetch Locations\n  fetchLocations = () => {\n    fetch(\"https://challenge.3fs.si/storage/locations\",\n          {\n            method: \"GET\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': this.state.auth\n    }})\n    .then(res =>{\n      if (res.ok) {res.json().then(data=> this.setState({ locations: data.locations }))} else {\n        console.log(`Error (${res.status}) on fetch Locations, server response: ${res.statusText}`);\n        this.setErrorMsg(res.status,res.statusText,'App.js:141');\n        this.toggleError();\n      }\n    });\n  }\n\n\n  // fetch object lists\n  fetchObjects = (id) => {\n    fetch(`https://challenge.3fs.si/storage/buckets/${id}/objects`, \n          {\n              method: \"GET\",\n              headers: {\n                      'Content-Type': 'application/json',\n                      'Authorization': this.state.auth\n                      }\n          })\n    .then(res => {\n      if (res.ok) { res.json().then(data=>this.setState({ objects: data.objects })) } else {\n        this.setErrorMsg(res.status,res.statusText,'App.js:160');\n        console.log(`Error (${res.status}) on fetch Objects, server response: ${res.statusText}`);\n        this.toggleError();\n      }\n    });    \n  }\n\n\n// ERROR HANDLING\n\n/*\nI encountered frequent (500) Internal server error messages and decided to implement the error message for the user.\nThe errors are also console logged.\n\n*/\n\n// Open notification on fetch error\ntoggleError = () => {\n  this.setState({errToggle: !this.state.errToggle})\n}\n\n// Clear the Error message\nclearErrorMsg = () => {\n  let err = { status: 0, message: '', component: ''} \n  this.setState({ errMsg: err });\n}\n\n// Set the error message when the modal window opens\nsetErrorMsg = (status,text,comp) => {\n  let err = { status: status, message: text, component: comp }\n  this.setState({ errMsg: err });\n}\n\n\n // MOUNTING AND UPDATING:\n\n /*\n        I used getSnapshotBeforeUpdate because the prevState in componentDidUpdate returned and empty object ({ })\n        which set off an infinite loop of state updates.\n\n */\n  getSnapshotBeforeUpdate(prevProps,prevState) { // prevState returns correctly\n      if(prevState !== null) {\n        return prevState.auth;\n      }\n      return null;\n  }\n\n  componentDidUpdate(prevState,prevProps,snapshot) { // prevState returns an empty object, that's why snapshot is used\n    if (snapshot !== null && snapshot !== this.state.auth) {\n\n      this.fetchBucketList();\n      this.fetchLocations();\n      this.toggleLogin();\n    }\n  }\n\n  // Check if user already logged in\n  componentDidMount() {\n    let ls = localStorage.getItem('userKey');\n    if (ls !== null) {\n      this.setState({ auth: ls});\n      } \n  }\n\n\n\n  render() {\n    return (\n      <>\n        <Header goHome={this.goHome}/>\n        {!this.state.login && <Secrets\n                                    handleLogin={this.handleLogin}\n                                    fetchBucketList={this.fetchBucketList}\n                                    fetchLocations={this.fetchLocations}/>}\n        <div className=\"width-90\"><h2>{(!this.state.bucket) ? 'Bucket list' : this.state.bucket.name }</h2></div>\n        {(this.state.login && this.state.bucketlist) && <Bucketlist \n                                    /*States*/\n                                    buckets={this.state.buckets}\n                                    locations={this.state.locations}\n                                    auth={this.state.auth}\n                                    /*Functions*/\n                                    toggleBucket={this.toggleBucket}\n                                    fetchBucketList={this.fetchBucketList}\n                                    fetchObjects={this.fetchObjects}\n                                    fetchBucket={this.fetchBucket}\n                                    /*Errors*/\n                                    toggleError={this.toggleError}\n                                    setErrorMsg={this.setErrorMsg}\n                                    />}\n        {(this.state.login && !this.state.bucketlist) && <Bucket\n                                    /*States*/\n                                    bucket={this.state.bucket}\n                                    objects={this.state.objects}\n                                    auth={this.state.auth}\n                                    /*Functions*/\n                                    goHome={this.goHome}\n                                    fetchObjects={this.fetchObjects}\n                                    fetchBucketList={this.fetchBucketList}\n                                    /*Errors*/\n                                    toggleError={this.toggleError}\n                                    setErrorMsg={this.setErrorMsg}\n                                    />}\n        {(this.state.errToggle) && <ErrorMessage\n                                    toggleError={this.toggleError}\n                                    clearErrorMsg={this.clearErrorMsg}\n                                    errMsg={this.state.errMsg}\n                                    />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}